@using RestaurantSupportWebApp.ViewModels;
@model EditStaffViewModel

@{
    ViewBag.Title = "Edit Waiter";
    Layout = "_LayoutHostess.cshtml";
}

<h1>Редагувати офіціанта</h1>
<hr />
<h3>@Model.StaffName</h3>

<form asp-action="EditWaiter" autocomplete="off" class="needs-validation row g-2" novalidate>
    <input asp-for="StaffId" hidden />
    <div class="col-10">
        <label class="form-label">Посада</label>
        <select class="form-select form-select-lg mb-3" id="positions" asp-for="PositionId">
            <option hidden selected value="">Посада</option>
        </select>
    </div>

    <div class="col-10">
        <label class="form-label">Графік</label>
        <select class="form-select form-select-lg mb-3" id="schedules" asp-for="ScheduleId">
            <option hidden selected value="">Графік</option>
        </select>
    </div>

    <div class="col-4">
        <label class="form-label">Зарплата</label>
        <div class="input-group mb-3">
            <span class="input-group-text">₴</span>
            <input asp-for="Salary" class="form-control form-control-lg" placeholder="Зарплата" min="0" value="@Model.Salary">
            <span class="input-group-text">.00</span>
        </div>
    </div>

    <div class="col-12">
        <button type="submit" class="btn btn-success btn-block py-2">Підтвердити</button>
    </div>
</form>

<script>
    window.addEventListener('load', () => {
        getPositions(@Model.PositionId);
        getSchedules(@Model.ScheduleId);

        function getPositions(id) {
            let xhr = new XMLHttpRequest();
            xhr.open('POST', '/Hostess/AddWaiterGetPositions');
            xhr.setRequestHeader('Content-Type', 'x-www-form-urlencoded');
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onload = () => {
                let data = JSON.parse(xhr.responseText);
                console.log(data);
                for (let i = 0; i < data.length; i++) {
                    let option = document.createElement('option');
                    option.value = data[i].Id;
                    option.innerText = data[i].Title;
                    if (data[i].Id == id) {
                        option.selected = true;
                    }
                    document.getElementById('positions').appendChild(option);
                }
            };
            xhr.send();
        }

        function getSchedules(id) {
            let xhr = new XMLHttpRequest();
            xhr.open('POST', '/Hostess/AddWaiterGetSchedules');
            xhr.setRequestHeader('Content-Type', 'x-www-form-urlencoded');
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onload = () => {
                let data = JSON.parse(xhr.responseText);
                for (let i = 0; i < data.length; i++) {
                    let option = document.createElement('option');
                    option.value = data[i].Id;
                    option.innerText = data[i].Name;
                    if (data[i].Id == id) {
                        option.selected = true;
                    }
                    document.getElementById('schedules').appendChild(option);
                }
            };
            xhr.send();
        }
    });
</script>
